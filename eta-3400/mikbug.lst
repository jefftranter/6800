Crasm 1.8:                           MIKBUG                  page  1

                         1  ; This is the source to MikBug, Motorola's monit
  or program for their
                         2  ; 6800 development board and offered on some ear
  ly 6800-based systems
                         3  ; like the SWTPC system.
                         4  ;
                         5  ; This version was ported to the crasm assembler
  and modified to run
                         6  ; on the Heathkit ET-3400/ET-3400A training with
  ETA-3400 Memory and
                         7  ; Input/Output Accessory. It has not been tested
  .
                         8  ;
                         9  ; The original source code came from here:
                        10  ; http://www.nj7p.org/Computers/Software/Mon.htm
  l
                        11  
                        12         CPU 6800
                        13         NAM    MIKBUG
                        14  ;      REV 009
                        15  ;      COPYRIGHT 1974 BY MOTOROLA INC
                        16  ;
                        17  ;      MIKBUG (TM)
                        18  ;
                        19  ;      L  LOAD
                        20  ;      G  GO TO TARGET PROGRAM
                        21  ;      M  MEMORY CHANGE
                        22  ;      F  PRINT PUNCH DUMP
                        23  ;      R  DISPLAY CONTENTS OF TARGET STACK
                        24  ;            CC  B   A    X   P   S
  8004                  25  PIASB   =      $8004
  8003                  26  PIADB   =      $8003     ; B DATA
  8002                  27  PIAS    =      $8002     ; PIA STATUS
  8001                  28  PIAD    =      $8001     ; PIA DATA
                        29  ;       OPT    MEMORY
  FE00                  30          * =    $FE00     ; START OF MONITOR ROM
                        31  
                        32  ;     I/O INTERRUPT SEQUENCE
FE00 FE0000             33  IO      LDX    IOV
FE03 6E00               34          JMP    ,X
                        35  
                        36  ; NMI SEQUENCE
FE05 FE0006             37  POWDWN  LDX    NIO       ; GET NMI VECTOR
FE08 6E00               38          JMP    ,X
                        39  
FE0A 863C               40  LOAD    LDAA   #$3C
FE0C B78004             41          STAA   PIASB     ; READER RELAY ON
FE0F 8611               42          LDAA   #$11
FE11 8D62               43          BSR    OUTCH     ; OUTPUT CHAR
                        44  
FE13 8D63               45  LOAD3   BSR    INCH
FE15 8153               46          CMPA   #'S'
FE17 26FA               47          BNE    LOAD3     ; 1ST CHAR NOT (S)
FE19 8D5D               48          BSR    INCH      ; READ CHAR
FE1B 8139               49          CMPA   #'9'
FE1D 2725               50          BEQ    LOAD21
FE1F 8131               51          CMPA   #'1'
FE21 26F0               52          BNE    LOAD3     ; 2ND CHAR NOT (1)
FE23 7F000A             53          CLR    CKSM      ; ZERO CHECKSUM
FE26 8D2D               54          BSR    BYTE      ; READ BYTE
FE28 8002               55          SUBA   #2
FE2A B7000B             56          STAA   BYTECT    ; BYTE COUNT


Crasm 1.8:                           MIKBUG                  page  2

                        57  ; BUILD ADDRESS
FE2D 8D18               58          BSR    BADDR
                        59  ; STORE DATA
FE2F 8D24               60  LOAD11  BSR    BYTE
                        61  
FE31 7A000B             62          DEC    BYTECT
FE34 2705               63          BEQ    LOAD15    ; ZERO BYTE COUNT
FE36 A700               64          STAA   ,X        ; STORE DATA
FE38 08                 65          INX
FE39 20F4               66          BRA    LOAD11
                        67  
FE3B 7C000A             68  LOAD15  INC    CKSM
FE3E 27D3               69          BEQ    LOAD3
FE40 863F               70  LOAD19  LDAA   #'?'      ; PRINT QUESTION MARK
FE42 8D31               71          BSR    OUTCH
  FE44                  72  LOAD21  =      *
FE44 7EFEE3             73  C1      JMP    CONTRL
                        74  
                        75  ; BUILD ADDRESS
FE47 8D0C               76  BADDR   BSR    BYTE      ; READ 2 FRAMES
FE49 B7000C             77          STAA   XHI
FE4C 8D07               78          BSR    BYTE
FE4E B7000D             79          STAA   XLOW
FE51 FE000C             80          LDX    XHI       ; (X) ADDRESS WE BUILT
FE54 39                 81          RTS
                        82  
                        83  ;INPUT BYTE (TWO FRAMES)
FE55 8D53               84  BYTE    BSR    INHEX     ; GET HEX CHAR
FE57 48                 85          ASLA
FE58 48                 86          ASLA
FE59 48                 87          ASLA
FE5A 48                 88          ASLA
FE5B 16                 89          TAB
FE5C 8D4C               90          BSR    INHEX
FE5E 1B                 91          ABA
FE5F 16                 92          TAB
FE60 FB000A             93          ADDB   CKSM
FE63 F7000A             94          STAB   CKSM
FE66 39                 95          RTS
                        96  
FE67 44                 97  OUTHL   LSRA             ; OUT HEX LEFT BCD DIGI
                           T
FE68 44                 98          LSRA
FE69 44                 99          LSRA
FE6A 44                100          LSRA
                       101  
FE6B 840F              102  OUTHR   ANDA   #$F       ; OUT HEX RIGHT BCD DIG
                           IT
FE6D 8B30              103          ADDA   #$30
FE6F 8139              104          CMPA   #$39
FE71 2302              105          BLS    OUTCH
FE73 8B07              106          ADDA   #$7
                       107  
                       108  ; OUTPUT ONE CHAR
FE75 7EFFD1            109  OUTCH   JMP    OUTEEE
FE78 7EFFAC            110  INCH    JMP    INEEE
                       111  
                       112  ; PRINT DATA POINTED AT BY X-REG
FE7B 8DF8              113  PDATA2  BSR    OUTCH
FE7D 08                114          INX
FE7E A600              115  PDATA1  LDAA   ,X
FE80 8104              116          CMPA   #4


Crasm 1.8:                           MIKBUG                  page  3

FE82 26F7              117          BNE    PDATA2
FE84 39                118          RTS              ; STOP ON EOT
                       119  
                       120  ; CHANGE MENORY (M AAAA DD NN)
FE85 8DC0              121  CHANGE  BSR    BADDR     ; BUILD ADDRESS
FE87 CEFF9D            122  CHA51   LDX    #MCL
FE8A 8DF2              123          BSR    PDATA1    ; C/R L/F
FE8C CE000C            124          LDX    #XHI
FE8F 8D37              125          BSR    OUT4HS    ; PRINT ADDRESS
FE91 FE000C            126          LDX    XHI
FE94 8D34              127          BSR    OUT2HS    ; PRINT DATA (OLD)
FE96 FF000C            128          STX    XHI       ; SAVE DATA ADDRESS
FE99 8DDD              129          BSR    INCH      ; INPUT ONE CHAR
FE9B 8120              130          CMPA   #$20
FE9D 26E8              131          BNE    CHA51     ; NOT SPACE
FE9F 8DB4              132          BSR    BYTE      ; INPUT NEW DATA
FEA1 09                133          DEX
FEA2 A700              134          STAA   ,X        ; CHANGE MEMORY
FEA4 A100              135          CMPA   ,X
FEA6 27DF              136          BEQ    CHA51     ; DID CHANGE
FEA8 2096              137          BRA    LOAD19    ; NOT CHANGED
                       138  
                       139  ; INPUT HEX CHAR
FEAA 8DCC              140  INHEX   BSR    INCH
FEAC 8030              141          SUBA   #$30
FEAE 2B94              142          BMI    C1        ; NOT HEX
FEB0 8109              143          CMPA   #$09
FEB2 2F0A              144          BLE    IN1HG
FEB4 8111              145          CMPA   #$11
FEB6 2B8C              146          BMI    C1        ; NOT HEX
FEB8 8116              147          CMPA   #$16
FEBA 2E88              148          BGT    C1        ; NOT HEX
FEBC 8007              149          SUBA   #7
FEBE 39                150  IN1HG   RTS
                       151  
FEBF A600              152  OUT2H   LDAA   0,X       ; OUTPUT 2 HEX CHAR
FEC1 8DA4              153  OUT2HA  BSR    OUTHL     ; OUT LEFT HEX CHAR
FEC3 A600              154          LDAA   0,X
FEC5 08                155          INX
FEC6 20A3              156          BRA    OUTHR     ; OUTPUT RIGHT HEX CHAR
                           AND R
                       157  
FEC8 8DF5              158  OUT4HS  BSR    OUT2H     ; OUTPUT 4 HEX CHAR + S
                           PACE
FECA 8DF3              159  OUT2HS  BSR    OUT2H     ; OUTPUT 2 HEX CHAR + S
                           PACE
                       160  
FECC 8620              161  OUTS    LDAA   #$20      ; SPACE
FECE 20A5              162          BRA    OUTCH     ; (BSR & RTS)
                       163  
                       164  ; ENTER POWER  ON SEQUENCE
  FED0                 165  START   =      *
FED0 8E0042            166          LDS    #STACK
FED3 BF0008            167          STS    SP        ; INZ TARGET'S STACK PN
                           TR
                       168  ; INZ PIA
FED6 CE8001            169          LDX    #PIAD     ; (X) POINTER TO DEVICE
                           PIA
FED9 6C00              170          INC    0,X       ; SET DATA DIR PIAD
FEDB 8607              171          LDAA   #$7
FEDD A701              172          STAA   1,X       ; INIT CON PIAS
FEDF 6C00              173          INC    0,X       ; MARK COM LINE


Crasm 1.8:                           MIKBUG                  page  4

FEE1 A702              174          STAA   2,X       ; SET DATA DIR PIADB
FEE3 8634              175  CONTRL  LDAA   #$34
FEE5 B78004            176          STAA   PIASB     ; SET CONTROL PIASB TUR
                           N READ
FEE8 B78003            177          STAA   PIADB     ; SET TIMER INTERVAL
FEEB 8E0042            178          LDS    #STACK    ; SET CONTRL STACK POIN
                           TER
FEEE CEFF9C            179          LDX    #MCLOFF
                       180  
FEF1 8D8B              181          BSR    PDATA1    ; PRINT DATA STRING
                       182  
FEF3 8D83              183          BSR    INCH      ; READ CHARACTER
FEF5 16                184          TAB
FEF6 8DD4              185          BSR    OUTS      ; PRINT SPACE
FEF8 C14C              186          CMPB   #'L'
FEFA 2603              187          BNE    *+5
FEFC 7EFE0A            188          JMP    LOAD
FEFF C14D              189          CMPB   #'M'
FF01 2782              190          BEQ    CHANGE
FF03 C152              191          CMPB   #'R'
FF05 2718              192          BEQ    PRINT     ; STACK
FF07 C150              193          CMPB   #'P'
FF09 2732              194          BEQ    PUNCH     ; PRINT/PUNCH
FF0B C147              195          CMPB   #'G'
FF0D 26D4              196          BNE    CONTRL
FF0F BE0008            197          LDS    SP        ; RESTORE PGM'S STACK P
                           TR
FF12 3B                198          RTI              ; GO
                       199  
                       200  ; ENTER FROM SOFTWARE INTERRUPT
  FF13                 201  SFE     =      *
FF13 BF0008            202          STS    SP        ; SAVE TARGET'S STACK P
                           OINTER
                       203  ; DECREMENT P-COUNTER
FF16 30                204          TSX
FF17 6D06              205          TST    6,X
FF19 2602              206          BNE    *+4
FF1B 6A05              207          DEC    5,X
FF1D 6A06              208          DEC    6,X
                       209  
                       210  ; PRINT CONTENTS OF STACK
FF1F FE0008            211  PRINT   LDX    SP
FF22 08                212          INX
FF23 8DA5              213          BSR    OUT2HS    ; CONDITION CODES
FF25 8DA3              214          BSR    OUT2HS    ; ACC-B
FF27 8DA1              215          BSR    OUT2HS    ; ACC-A
FF29 8D9D              216          BSR    OUT4HS    ; X-REG
FF2B 8D9B              217          BSR    OUT4HS    ; P-COUNTER
FF2D CE0008            218          LDX    #SP
FF30 8D96              219          BSR    OUT4HS    ; STACK POINTER
FF32 20AF              220  C2      BRA    CONTRL
                       221  
                       222  ; PUNCH DUMP
                       223  ; PUNCH FROM BEGINNING ADDRESS (BEGA) THRU ENDIN
  G
                       224  ; ADDRESS (ENDA)
                       225  ;
FF34 0D0A0000000053
FF3B 3104              226  MTAPE1  DB     $D,$A,0,0,0,0,'S','1',4 ; PUNCH F
                                         ORMAT
                       227  
                       228  


Crasm 1.8:                           MIKBUG                  page  5

  FF3D                 229  PUNCH   =      *
                       230  
FF3D 8612              231          LDAA   #$12      ; TURN TTY PUNCH ON
FF3F BDFE75            232          JSR    OUTCH     ; OUT CHAR  
                       233  
FF42 FE0002            234          LDX    BEGA
FF45 FF000F            235          STX    TW        ; TEMP BEGINNING ADDRES
                           S
FF48 B60005            236  PUN11   LDAA   ENDA+1
FF4B B00010            237          SUBA   TW+1
FF4E F60004            238          LDAB   ENDA
FF51 F2000F            239          SBCB   TW
FF54 2604              240          BNE    PUN22
FF56 8110              241          CMPA   #16
FF58 2502              242          BCS    PUN23
FF5A 860F              243  PUN22   LDAA   #15
FF5C 8B04              244  PUN23   ADDA   #4
FF5E B70011            245          STAA   MCONT     ; FRAME COUNT THIS RECO
                           RD
FF61 8003              246          SUBA   #3
FF63 B7000E            247          STAA   TEMP      ; BYTE COUNT THIS RECOR
                           D
                       248  ; PUNCH C/R,L/F,NULL,S,1
FF66 CEFF34            249          LDX    #MTAPE1
FF69 BDFE7E            250          JSR    PDATA1
FF6C 5F                251          CLRB             ; ZERO CHECKSUM
                       252  ; PUNCH FRAME COUNT
FF6D CE0011            253          LDX    #MCONT
FF70 8D25              254          BSR    PUNT2     ; PUNCH 2 HEX CHAR
                       255  ; PUNCH ADDRESS
FF72 CE000F            256          LDX    #TW
FF75 8D20              257          BSR    PUNT2
FF77 8D1E              258          BSR    PUNT2
                       259  ; PUNCH DATA
FF79 FE000F            260          LDX    TW
FF7C 8D19              261  PUN32   BSR    PUNT2     ; PUNCH ONE BYTE (2 FRA
                           MES)
FF7E 7A000E            262          DEC    TEMP      ; DEC BYTE COUNT
FF81 26F9              263          BNE    PUN32
FF83 FF000F            264          STX    TW
FF86 53                265          COMB
FF87 37                266          PSHB
FF88 30                267          TSX
FF89 8D0C              268          BSR    PUNT2     ; PUNCH CHECKSUM
FF8B 33                269          PULB             ; RESTORE STACK
FF8C FE000F            270          LDX    TW
FF8F 09                271          DEX
FF90 BC0004            272          CPX    ENDA
FF93 26B3              273          BNE    PUN11
FF95 209B              274          BRA    C2        ; JMP TO CONTRL
                       275  
                       276  ; PUNCH 2 HEX CHAR UPDATE CHECKSUM
FF97 EB00              277  PUNT2   ADDB   0,X       ; UPDATE CHECKSUM
FF99 7EFEBF            278          JMP    OUT2H     ; OUTPUT TWO HEX CHAR A
                           ND RTS
                       279  
                       280  
FF9C 13                281  MCLOFF  DB     $13       ; READER OFF
FF9D 0D0A140000002A
FFA4 04                282  MCL     DB     $D,$A,$14,0,0,0,'*',4 ; C/R,L/F,P
                                       UNCH
                       283  


Crasm 1.8:                           MIKBUG                  page  6

                       284  ;
FFA5 FF0012            285  SAV     STX    XTEMP
FFA8 CE8001            286          LDX    #PIAD
FFAB 39                287          RTS
                       288  
                       289  ;INPUT   ONE CHAR INTO A-REGISTER
FFAC 37                290  INEEE   PSHB             ; SAVE ACC-B
FFAD 8DF6              291          BSR    SAV       ; SAVE XR
FFAF A600              292  IN1     LDAA   0,X       ; LOOK FOR START BIT
FFB1 2BFC              293          BMI    IN1
FFB3 6F02              294          CLR    2,X       ; SET COUNTER FOR HALF 
                           BIT TI
FFB5 8D3C              295          BSR    DE        ; START TIMER
FFB7 8D36              296          BSR    DEL       ; DELAY HALF BIT TIME
FFB9 C604              297          LDAB   #4        ; SET DEL FOR FULL BIT 
                           TIME
FFBB E702              298          STAB   2,X
FFBD 58                299          ASLB             ; SET UP CNTR WITH 8
                       300  
FFBE 8D2F              301  IN3     BSR    DEL       ; WAIT ONE CHAR TIME
FFC0 0D                302          SEC              ; NARK CON LINE
FFC1 6900              303          ROL    0,X       ; GET BIT INTO CFF
FFC3 46                304          RORA             ; CFF TO AR
FFC4 5A                305          DECB
FFC5 26F7              306          BNE    IN3
FFC7 8D26              307          BSR    DEL       ; WAIT FOR STOP BIT
FFC9 847F              308          ANDA   #$7F      ; RESET PARITY BIT
FFCB 817F              309          CMPA   #$7F
FFCD 27E0              310          BEQ    IN1       ; IF RUBOUT, GET NEXT C
                           HAR
FFCF 2012              311          BRA    IOUT2     ; GO RESTORE REG
                       312  
                       313  ; OUTPUT ONE CHAR 
FFD1 37                314  OUTEEE  PSHB             ; SAV BR
FFD2 8DD1              315          BSR    SAV       ; SAV XR
FFD4 C60A              316  IOUT    LDAB   #$A       ; SET UP COUNTER
FFD6 6A00              317          DEC    0,X       ; SET START BIT
FFD8 8D19              318          BSR    DE        ; START TIMER
FFDA 8D13              319  OUT1    BSR    DEL       ; DELAY ONE BIT TIME
FFDC A700              320          STAA   0,X       ; PUT OUT ONE DATA BIT
FFDE 0D                321          SEC              ; SET CARRY BIT
FFDF 46                322          RORA             ; SHIFT IN NEXT BIT
FFE0 5A                323          DECB             ; DECREMENT COUNTER
FFE1 26F7              324          BNE    OUT1      ; TEST FOR 0
FFE3 E602              325  IOUT2   LDAB   2,X       ; TEST FOR STOP BITS
FFE5 58                326          ASLB             ; SHIFT BIT TO SIGN
FFE6 2A02              327          BPL    IOS       ; BRANCH FOR 1 STOP BIT
FFE8 8D05              328          BSR    DEL       ; DELAY-FOR STOP BITS
FFEA FE0012            329  IOS     LDX    XTEMP     ; RES XR
FFED 33                330          PULB             ; RESTORE BR
FFEE 39                331          RTS
                       332  
FFEF 6D02              333  DEL     TST    2,X       ; IS TIME UP
FFF1 2AFC              334          BPL    DEL
FFF3 6C02              335  DE      INC    2,X       ; RESET TIMER
FFF5 6A02              336          DEC    2,X
FFF7 39                337          RTS
                       338  
FFF8 FE00              339          DW     IO
FFFA FF13              340          DW     SFE
FFFC FE05              341          DW     POWDWN
FFFE FED0              342          DW     START


Crasm 1.8:                           MIKBUG                  page  7

                       343  
  0000                 344  ROMEND  =       *
                       345  
  0000                 346          * =    $0000
                       347          DUMMY
  0000                 348  IOV     DS     2         ; IO INTERRUPT POINTER
  0002                 349  BEGA    DS     2         ; BEGINNING ADDR PRINT/
                           PUNCH
  0004                 350  ENDA    DS     2         ; ENDING ADDR PRINT/PUN
                           CH
  0006                 351  NIO     DS     2         ; NMI INTERRUPT POINTER
  0008                 352  SP      DS     1         ; S-HIGH
                       353          DS     1         ; S-LOW
  000A                 354  CKSM    DS     1         ; CHECKSUM
                       355  
  000B                 356  BYTECT  DS     1         ; BYTE COUNT
  000C                 357  XHI     DS     1         ; XREG HIGH
  000D                 358  XLOW    DS     1         ; XREG LOW
  000E                 359  TEMP    DS     1         ; CHAR COUNT (INADD)
  000F                 360  TW      DS     2         ; TEMP/
  0011                 361  MCONT   DS     1         ; TEMP
  0012                 362  XTEMP   DS     2         ; X-REG TEMP STORAGE
                       363          DS     46
  0042                 364  STACK   DS     1         ; STACK POINTER
                       365  
                       366  ;       END
                       367  

ERRORS:       0
WARNINGS:     0

Successful assembly...
 Last address       42 (66)
 Code length       400 (1024)






























Crasm 1.8:                           MIKBUG                  page  8

^FE47   Abs BADDR                                            
^0002   Abs BEGA                                             
^FE55   Abs BYTE                                             
^000B   Abs BYTECT                                           
 FE44   Abs C1                                               
 FF32   Abs C2                                               
 FE87   Abs CHA51                                            
 FE85   Abs CHANGE                                           
^000A   Abs CKSM                                             
^FEE3   Abs CONTRL                                           
^FFF3   Abs DE                                               
^FFEF   Abs DEL                                              
^0004   Abs ENDA                                             
 FFAF   Abs IN1                                              
^FEBE   Abs IN1HG                                            
 FFBE   Abs IN3                                              
^FE78   Abs INCH                                             
^FFAC   Abs INEEE                                            
^FEAA   Abs INHEX                                            
 FE00   Abs IO                                               
^FFEA   Abs IOS                                              
?FFD4   Abs IOUT                                             
^FFE3   Abs IOUT2                                            
^0000   Abs IOV                                              
 FE0A   Abs LOAD                                             
 FE2F   Abs LOAD11                                           
^FE3B   Abs LOAD15                                           
 FE40   Abs LOAD19                                           
^FE44   Abs LOAD21                                           
 FE13   Abs LOAD3                                            
^FF9D   Abs MCL                                              
^FF9C   Abs MCLOFF                                           
^0011   Abs MCONT                                            
 FF34   Abs MTAPE1                                           
^0006   Abs NIO                                              
 FFDA   Abs OUT1                                             
 FEBF   Abs OUT2H                                            
?FEC1   Abs OUT2HA                                           
^FECA   Abs OUT2HS                                           
^FEC8   Abs OUT4HS                                           
^FE75   Abs OUTCH                                            
^FFD1   Abs OUTEEE                                           
 FE67   Abs OUTHL                                            
 FE6B   Abs OUTHR                                            
 FECC   Abs OUTS                                             
 FE7E   Abs PDATA1                                           
 FE7B   Abs PDATA2                                           
 8001   Abs PIAD                                             
 8003   Abs PIADB                                            
?8002   Abs PIAS                                             
 8004   Abs PIASB                                            
 FE05   Abs POWDWN                                           
^FF1F   Abs PRINT                                            
 FF48   Abs PUN11                                            
^FF5A   Abs PUN22                                            
^FF5C   Abs PUN23                                            
 FF7C   Abs PUN32                                            
^FF3D   Abs PUNCH                                            
^FF97   Abs PUNT2                                            
?0000   Abs ROMEND                                           
 FFA5   Abs SAV                                              
 FF13   Abs SFE                                              


Crasm 1.8:                           MIKBUG                  page  9

^0008   Abs SP                                               
^0042   Abs STACK                                            
 FED0   Abs START                                            
^000E   Abs TEMP                                             
^000F   Abs TW                                               
^000C   Abs XHI                                              
^000D   Abs XLOW                                             
^0012   Abs XTEMP                                            
























































