Crasm 1.8:                           MIKBUG                  page  1

                         1  ; This is the source to MikBug, Motorola's monit
  or program for their
                         2  ; 6800 development board and offered on some ear
  ly 6800-based systems
                         3  ; like the SWTPC system.
                         4  ;
                         5  ; This version was ported to the crasm assembler
  and modified to run
                         6  ; on the Heathkit ET-3400/ET-3400A training with
  ETA-3400 Memory and
                         7  ; Input/Output Accessory. It has not been tested
  .
                         8  ;
                         9  ; The original source code came from here:
                        10  ; http://www.nj7p.org/Computers/Software/Mon.htm
  l
                        11  
                        12         CPU 6800
                        13         NAM    MIKBUG
                        14  ;      REV 009
                        15  ;      COPYRIGHT 1974 BY MOTOROLA INC
                        16  ;
                        17  ;      MIKBUG (TM)
                        18  ;
                        19  ;      L  LOAD
                        20  ;      G  GO TO TARGET PROGRAM
                        21  ;      M  MEMORY CHANGE
                        22  ;      F  PRINTIPUNCH DUMP
                        23  ;      R  DISPLAY CONTENTS OF TARGET STACK
                        24  ;            CC  B   A    X   P   S
  8004                  25  PIASB   =      $8004
  8003                  26  PIADB   =      $8003     ; B DATA
  8002                  27  PIAS    =      $8002     ; PIA STATUS
  8001                  28  PIAD    =      $8001     ; PIA DATA
                        29  ;       OPT    MEMORY
  FC00                  30          * =    $FC00     ; START OF MONITOR ROM
                        31  
                        32  ;     I/O INTERRUPT SEQUENCE
FC00 FE0000             33  IO      LDX    IOV
FC03 6E00               34          JMP    ,X
                        35  
                        36  ; NMI SEQUENCE
FC05 FE0006             37  POWDWN  LDX    NIO       ; GET NMI VECTOR
FC08 6E00               38          JMP    ,X
                        39  
FC0A 863C               40  LOAD    LDAA   #$3C
FC0C B78004             41          STAA   PIASB     ; READER RELAY ON
FC0F 8611               42          LDAA   #$11
FC11 8D62               43          BSR    OUTCH     ; OUTPUT CHAR
                        44  
FC13 8D63               45  LOAD3   BSR    INCH
FC15 8153               46          CMPA   #'S'
FC17 26FA               47          BNE    LOAD3     ; 1ST CHAR NOT (S)
FC19 8D5D               48          BSR    INCH      ; READ CHAR
FC1B 8139               49          CMPA   #'9'
FC1D 2725               50          BEQ    LOAD21
FC1F 8131               51          CMPA   #'1'
FC21 26F0               52          BNE    LOAD3     ; 2ND CHAR NOT (1)
FC23 7F000A             53          CLR    CKSM      ; ZERO CHECKSUM
FC26 8D2D               54          BSR    BYTE      ; READ BYTE
FC28 8002               55          SUBA   #2
FC2A B7000B             56          STAA   BYTECT    ; BYTE COUNT


Crasm 1.8:                           MIKBUG                  page  2

                        57  ; BUILD ADDRESS
FC2D 8D18               58          BSR    BADDR
                        59  ; STORE DATA
FC2F 8D24               60  LOAD11  BSR    BYTE
                        61  
FC31 7A000B             62          DEC    BYTECT
FC34 2705               63          BEQ    LOAD15    ; ZERO BYTE COUNT
FC36 A700               64          STAA   ,X        ; STORE DATA
FC38 08                 65          INX
FC39 20F4               66          BRA    LOAD11
                        67  
FC3B 7C000A             68  LOAD15  INC    CKSM
FC3E 27D3               69          BEQ    LOAD3
FC40 863F               70  LOAD19  LDAA   #'?'      ; PRINT QUESTION MARK
FC42 8D31               71          BSR    OUTCH
  FC44                  72  LOAD21  =      *
FC44 7EFCE3             73  C1      JMP    CONTRL
                        74  
                        75  ; BUILD ADDRESS
FC47 8D0C               76  BADDR   BSR    BYTE      ; READ 2 FRAMES
FC49 B7000C             77          STAA   XHI
FC4C 8D07               78          BSR    BYTE
FC4E B7000D             79          STAA   XLOW
FC51 FE000C             80          LDX    XHI       ; (X) ADDRESS WE BUILT
FC54 39                 81          RTS
                        82  
                        83  ;INPUT BYTE (TWO FRAMES)
FC55 8D53               84  BYTE    BSR    INHEX     ; GET HEX CHAR
FC57 48                 85          ASLA
FC58 48                 86          ASLA
FC59 48                 87          ASLA
FC5A 48                 88          ASLA
FC5B 16                 89          TAB
FC5C 8D4C               90          BSR    INHEX
FC5E 1B                 91          ABA
FC5F 16                 92          TAB
FC60 FB000A             93          ADDB   CKSM
FC63 F7000A             94          STAB   CKSM
FC66 39                 95          RTS
                        96  
FC67 44                 97  OUTHL   LSRA             ; OUT HEX LEFT BCD DIGI
                           T
FC68 44                 98          LSRA
FC69 44                 99          LSRA
FC6A 44                100          LSRA
                       101  
FC6B 840F              102  OUTHR   ANDA   #$F       ; OUT HEX RIGHT BCD DIG
                           IT
FC6D 8B30              103          ADDA   #$30
FC6F 8139              104          CMPA   #$39
FC71 2302              105          BLS    OUTCH
FC73 8B07              106          ADDA   #$7
                       107  
                       108  ; OUTPUT ONE CHAR
FC75 7EFDD1            109  OUTCH   JMP    OUTEEE
FC78 7EFDAC            110  INCH    JMP    INEEE
                       111  
                       112  ; PRINT DATA POINTED AT BY X-REG
FC7B 8DF8              113  PDATA2  BSR    OUTCH
FC7D 08                114          INX
FC7E A600              115  PDATA1  LDAA   ,X
FC80 8104              116          CMPA   #4


Crasm 1.8:                           MIKBUG                  page  3

FC82 26F7              117          BNE    PDATA2
FC84 39                118          RTS              ; STOP ON EOT
                       119  
                       120  ; CHANGE MENORY (M AAAA DD NN)
FC85 8DC0              121  CHANGE  BSR    BADDR     ; BUILD ADDRESS
FC87 CEFD9D            122  CHA51   LDX    #MCL
FC8A 8DF2              123          BSR    PDATA1    ; C/R L/F
FC8C CE000C            124          LDX    #XHI
FC8F 8D37              125          BSR    OUT4HS    ; PRINT ADDRESS
FC91 FE000C            126          LDX    XHI
FC94 8D34              127          BSR    OUT2HS    ; PRINT DATA (OLD)
FC96 FF000C            128          STX    XHI       ; SAVE DATA ADDRESS
FC99 8DDD              129          BSR    INCH      ; INPUT ONE CHAR
FC9B 8120              130          CMPA   #$20
FC9D 26E8              131          BNE    CHA51     ; NOT SPACE
FC9F 8DB4              132          BSR    BYTE      ; INPUT NEW DATA
FCA1 09                133          DEX
FCA2 A700              134          STAA   ,X        ; CHANGE MEMORY
FCA4 A100              135          CMPA   ,X
FCA6 27DF              136          BEQ    CHA51     ; DID CHANGE
FCA8 2096              137          BRA    LOAD19    ; NOT CHANGED
                       138  
                       139  ; INPUT HEX CHAR
FCAA 8DCC              140  INHEX   BSR    INCH
FCAC 8030              141          SUBA   #$30
FCAE 2B94              142          BMI    C1        ; NOT HEX
FCB0 8109              143          CMPA   #$09
FCB2 2F0A              144          BLE    IN1HG
FCB4 8111              145          CMPA   #$11
FCB6 2B8C              146          BMI    C1        ; NOT HEX
FCB8 8116              147          CMPA   #$16
FCBA 2E88              148          BGT    C1        ; NOT HEX
FCBC 8007              149          SUBA   #7
FCBE 39                150  IN1HG   RTS
                       151  
FCBF A600              152  OUT2H   LDAA   0,X       ; OUTPUT 2 HEX CHAR
FCC1 8DA4              153  OUT2HA  BSR    OUTHL     ; OUT LEFT HEX CHAR
FCC3 A600              154          LDAA   0,X
FCC5 08                155          INX
FCC6 20A3              156          BRA    OUTHR     ; OUTPUT RIGHT HEX CHAR
                           AND R
                       157  
FCC8 8DF5              158  OUT4HS  BSR    OUT2H     ; OUTPUT 4 HEX CHAR + S
                           PACE
FCCA 8DF3              159  OUT2HS  BSR    OUT2H     ; OUTPUT 2 HEX CHAR + S
                           PACE
                       160  
FCCC 8620              161  OUTS    LDAA   #$20      ; SPACE
FCCE 20A5              162          BRA    OUTCH     ; (BSR & RTS)
                       163  
                       164  ; ENTER POWER  ON SEQUENCE
  FCD0                 165  START   =      *
FCD0 8E0042            166          LDS    #STACK
FCD3 BF0008            167          STS    SP        ; INZ TARGET'S STACK PN
                           TR
                       168  ; INZ PIA
FCD6 CE8001            169          LDX    #PIAD     ; (X) POINTER TO DEVICE
                           PIA
FCD9 6C00              170          INC    0,X       ; SET DATA DIR PIAD
FCDB 8607              171          LDAA   #$7
FCDD A701              172          STAA   1,X       ; INIT CON PIAS
FCDF 6C00              173          INC    0,X       ; MARK COM LINE


Crasm 1.8:                           MIKBUG                  page  4

FCE1 A702              174          STAA   2,X       ; SET DATA DIR PIADB
FCE3 8634              175  CONTRL  LDAA   #$34
FCE5 B78004            176          STAA   PIASB     ; SET CONTROL PIASB TUR
                           N READ
FCE8 B78003            177          STAA   PIADB     ; SET TIMER INTERVAL
FCEB 8E0042            178          LDS    #STACK    ; SET CONTRL STACK POIN
                           TER
FCEE CEFD9C            179          LDX    #MCLOFF
                       180  
FCF1 8D8B              181          BSR    PDATA1    ; PRINT DATA STRING
                       182  
FCF3 8D83              183          BSR    INCH      ; READ CHARACTER
FCF5 16                184          TAB
FCF6 8DD4              185          BSR    OUTS      ; PRINT SPACE
FCF8 C14C              186          CMPB   #'L'
FCFA 2603              187          BNE    *+5
FCFC 7EFC0A            188          JMP    LOAD
FCFF C14D              189          CMPB   #'M'
FD01 2782              190          BEQ    CHANGE
FD03 C152              191          CMPB   #'R'
FD05 2718              192          BEQ    PRINT     ; STACK
FD07 C150              193          CMPB   #'P'
FD09 2732              194          BEQ    PUNCH     ; PRINT/PUNCH
FD0B C147              195          CMPB   #'G'
FD0D 26D4              196          BNE    CONTRL
FD0F BE0008            197          LDS    SP        ; RESTORE PGM'S STACK P
                           TR
FD12 3B                198          RTI              ; GO
                       199  
                       200  ; ENTER FROM SOFTWARE INTERRUPT
  FD13                 201  SFE     =      *
FD13 BF0008            202          STS    SP        ; SAVE TARGET'S STACK P
                           OINTER
                       203  ; DECREMENT P-COUNTER
FD16 30                204          TSX
FD17 6D06              205          TST    6,X
FD19 2602              206          BNE    *+4
FD1B 6A05              207          DEC    5,X
FD1D 6A06              208          DEC    6,X
                       209  
                       210  ; PRINT CONTENTS OF STACK
FD1F FE0008            211  PRINT   LDX    SP
FD22 08                212          INX
FD23 8DA5              213          BSR    OUT2HS    ; CONDITION CODES
FD25 8DA3              214          BSR    OUT2HS    ; ACC-B
FD27 8DA1              215          BSR    OUT2HS    ; ACC-A
FD29 8D9D              216          BSR    OUT4HS    ; X-REG
FD2B 8D9B              217          BSR    OUT4HS    ; P-COUNTER
FD2D CE0008            218          LDX    #SP
FD30 8D96              219          BSR    OUT4HS    ; STACK POINTER
FD32 20AF              220  C2      BRA    CONTRL
                       221  
                       222  ; PUNCH DUMP
                       223  ; PUNCH FROM BEGINING ADDRESS (BEGA) THRU ENDI
                       224  ; ADDRESS (ENDA)
                       225  ;
FD34 0D0A0000000053
FD3B 3104              226  MTAPE1  DB     $D,$A,0,0,0,0,'S','1',4 ; PUNCH F
                                         ORMAT
                       227  
                       228  
  FD3D                 229  PUNCH   =      *


Crasm 1.8:                           MIKBUG                  page  5

                       230  
FD3D 8612              231          LDAA   #$12      ; TURN TTY PUNCH ON
FD3F BDFC75            232          JSR    OUTCH     ; OUT CHAR  
                       233  
FD42 FE0002            234          LDX    BEGA
FD45 FF000F            235          STX    TW        ; TEMP BEGINING ADDRESS
FD48 B60005            236  PUN11   LDAA   ENDA+1
FD4B B00010            237          SUBA   TW+1
FD4E F60004            238          LDAB   ENDA
FD51 F2000F            239          SBCB   TW
FD54 2604              240          BNE    PUN22
FD56 8110              241          CMPA   #16
FD58 2502              242          BCS    PUN23
FD5A 860F              243  PUN22   LDAA   #15
FD5C 8B04              244  PUN23   ADDA   #4
FD5E B70011            245          STAA   MCONT     ; FRAME COUNT THIS RECO
                           RD
FD61 8003              246          SUBA   #3
FD63 B7000E            247          STAA   TEMP      ; BYTE COUNT THIS RECOR
                           D
                       248  ; PUNCH C/R,L/F,NULL,S,1
FD66 CEFD34            249          LDX    #MTAPE1
FD69 BDFC7E            250          JSR    PDATA1
FD6C 5F                251          CLRB             ; ZERO CHECKSUM
                       252  ; PUNCH FRAME COUNT
FD6D CE0011            253          LDX    #MCONT
FD70 8D25              254          BSR    PUNT2     ; PUNCH 2 HEX CHAR
                       255  ; PUNCH ADDRESS
FD72 CE000F            256          LDX    #TW
FD75 8D20              257          BSR    PUNT2
FD77 8D1E              258          BSR    PUNT2
                       259  ; PUNCH DATA
FD79 FE000F            260          LDX    TW
FD7C 8D19              261  PUN32   BSR    PUNT2     ; PUNCH ONE BYTE (2 FRA
                           MES)
FD7E 7A000E            262          DEC    TEMP      ; DEC BYTE COUNT
FD81 26F9              263          BNE    PUN32
FD83 FF000F            264          STX    TW
FD86 53                265          COMB
FD87 37                266          PSHB
FD88 30                267          TSX
FD89 8D0C              268          BSR    PUNT2     ; PUNCH CHECKSUM
FD8B 33                269          PULB             ; RESTORE STACK
FD8C FE000F            270          LDX    TW
FD8F 09                271          DEX
FD90 BC0004            272          CPX    ENDA
FD93 26B3              273          BNE    PUN11
FD95 209B              274          BRA    C2        ; JMP TO CONTRL
                       275  
                       276  ; PUNCH 2 HEX CHAR UPDATE CHECKSUM
FD97 EB00              277  PUNT2   ADDB   0,X       ; UPDATE CHECKSUM
FD99 7EFCBF            278          JMP    OUT2H     ; OUTPUT TWO HEX CHAR A
                           ND RTS
                       279  
                       280  
FD9C 13                281  MCLOFF  DB     $13       ; READER OFF
FD9D 0D0A140000002A
FDA4 04                282  MCL     DB     $D,$A,$14,0,0,0,'*',4 ; C/R,L/F,P
                                       UNCH
                       283  
                       284  ;
FDA5 FF0012            285  SAV     STX    XTEMP


Crasm 1.8:                           MIKBUG                  page  6

FDA8 CE8001            286          LDX    #PIAD
FDAB 39                287          RTS
                       288  
                       289  ;INPUT   ONE CHAR INTO A-REGISTER
FDAC 37                290  INEEE   PSHB             ; SAVE ACC-B
FDAD 8DF6              291          BSR    SAV       ; SAV XR
FDAF A600              292  IN1     LDAA   0,X       ; LOOK FOR START BIT
FDB1 2BFC              293          BMI    IN1
FDB3 6F02              294          CLR    2,X       ; SET COUNTER FOR HALF 
                           BIT TI
FDB5 8D3C              295          BSR    DE        ; START TIMER
FDB7 8D36              296          BSR    DEL       ; DELAY HALF BIT TIME
FDB9 C604              297          LDAB   #4        ; SET DEL FOR FULL BIT 
                           TIME
FDBB E702              298          STAB   2,X
FDBD 58                299          ASLB             ; SET UP CNTR WITH 8
                       300  
FDBE 8D2F              301  IN3     BSR    DEL       ; WAIT ONE CHAR TIME
FDC0 0D                302          SEC              ; NARK CON LINE
FDC1 6900              303          ROL    0,X       ; GET BIT INTO CFF
FDC3 46                304          RORA             ; CFF TO AR
FDC4 5A                305          DECB
FDC5 26F7              306          BNE    IN3
FDC7 8D26              307          BSR    DEL       ; WAIT FOR STOP BIT
FDC9 847F              308          ANDA   #$7F      ; RESET PARITY BIT
FDCB 817F              309          CMPA   #$7F
FDCD 27E0              310          BEQ    IN1       ; IF RUBOUT, GET NEXT C
                           HAR
FDCF 2012              311          BRA    IOUT2     ; GO RESTORE REG
                       312  
                       313  ; OUTPUT ONE CHAR 
FDD1 37                314  OUTEEE  PSHB             ; SAV BR
FDD2 8DD1              315          BSR    SAV       ; SAV XR
FDD4 C60A              316  IOUT    LDAB   #$A       ; SET UP COUNTER
FDD6 6A00              317          DEC    0,X       ; SET START BIT
FDD8 8D19              318          BSR    DE        ; START TIMER
FDDA 8D13              319  OUT1    BSR    DEL       ; DELAY ONE BIT TIME
FDDC A700              320          STAA   0,X       ; PUT OUT ONE DATA BIT
FDDE 0D                321          SEC              ; SET CARRY BIT
FDDF 46                322          RORA             ; SHIFT IN NEXT BIT
FDE0 5A                323          DECB             ; DECREMENT COUNTER
FDE1 26F7              324          BNE    OUT1      ; TEST FOR 0
FDE3 E602              325  IOUT2   LDAB   2,X       ; TEST FOR STOP BITS
FDE5 58                326          ASLB             ; SHIFT BIT TO SIGN
FDE6 2A02              327          BPL    IOS       ; BRANCH FOR 1 STOP BIT
FDE8 8D05              328          BSR    DEL       ; DELAY-FOR STOP BITS
FDEA FE0012            329  IOS     LDX    XTEMP     ; RES XR
FDED 33                330          PULB             ; RESTORE BR
FDEE 39                331          RTS
                       332  
FDEF 6D02              333  DEL     TST    2,X       ; IS TIME UP
FDF1 2AFC              334          BPL    DEL
FDF3 6C02              335  DE      INC    2,X       ; RESET TIMER
FDF5 6A02              336          DEC    2,X
FDF7 39                337          RTS
                       338  
FDF8 FC00              339          DW     IO
FDFA FD13              340          DW     SFE
FDFC FC05              341          DW     POWDWN
FDFE FCD0              342          DW     START
                       343  
  FE00                 344  ROMEND  =       *


Crasm 1.8:                           MIKBUG                  page  7

                       345  
  0000                 346          * =    $0000
                       347          DUMMY
  0000                 348  IOV     DS     2         ; IO INTERRUPT POINTER
  0002                 349  BEGA    DS     2         ; BEGINING ADDR PRINT/P
                           UNCH
  0004                 350  ENDA    DS     2         ; ENDING ADDR PRINT/PUN
                           CH
  0006                 351  NIO     DS     2         ; NMI INTERRUPT POINTER
  0008                 352  SP      DS     1         ; S-HIGH
                       353          DS     1         ; S-LOW
  000A                 354  CKSM    DS     1         ; CHECKSUM
                       355  
  000B                 356  BYTECT  DS     1         ; BYTE COUNT
  000C                 357  XHI     DS     1         ; XREG HIGH
  000D                 358  XLOW    DS     1         ; XREG LOW
  000E                 359  TEMP    DS     1         ; CHAR COUNT (INADD)
  000F                 360  TW      DS     2         ; TEMP/
  0011                 361  MCONT   DS     1         ; TEMP
  0012                 362  XTEMP   DS     2         ; X-REG TEMP STORAGE
                       363          DS     46
  0042                 364  STACK   DS     1         ; STACK POINTER
                       365  
                       366  ;       END
                       367  

ERRORS:       0
WARNINGS:     0

Successful assembly...
 Last address       42 (66)
 Code length       400 (1024)
































Crasm 1.8:                           MIKBUG                  page  8

^FC47   Abs BADDR                                            
^0002   Abs BEGA                                             
^FC55   Abs BYTE                                             
^000B   Abs BYTECT                                           
 FC44   Abs C1                                               
 FD32   Abs C2                                               
 FC87   Abs CHA51                                            
 FC85   Abs CHANGE                                           
^000A   Abs CKSM                                             
^FCE3   Abs CONTRL                                           
^FDF3   Abs DE                                               
^FDEF   Abs DEL                                              
^0004   Abs ENDA                                             
 FDAF   Abs IN1                                              
^FCBE   Abs IN1HG                                            
 FDBE   Abs IN3                                              
^FC78   Abs INCH                                             
^FDAC   Abs INEEE                                            
^FCAA   Abs INHEX                                            
 FC00   Abs IO                                               
^FDEA   Abs IOS                                              
?FDD4   Abs IOUT                                             
^FDE3   Abs IOUT2                                            
^0000   Abs IOV                                              
 FC0A   Abs LOAD                                             
 FC2F   Abs LOAD11                                           
^FC3B   Abs LOAD15                                           
 FC40   Abs LOAD19                                           
^FC44   Abs LOAD21                                           
 FC13   Abs LOAD3                                            
^FD9D   Abs MCL                                              
^FD9C   Abs MCLOFF                                           
^0011   Abs MCONT                                            
 FD34   Abs MTAPE1                                           
^0006   Abs NIO                                              
 FDDA   Abs OUT1                                             
 FCBF   Abs OUT2H                                            
?FCC1   Abs OUT2HA                                           
^FCCA   Abs OUT2HS                                           
^FCC8   Abs OUT4HS                                           
^FC75   Abs OUTCH                                            
^FDD1   Abs OUTEEE                                           
 FC67   Abs OUTHL                                            
 FC6B   Abs OUTHR                                            
 FCCC   Abs OUTS                                             
 FC7E   Abs PDATA1                                           
 FC7B   Abs PDATA2                                           
 8001   Abs PIAD                                             
 8003   Abs PIADB                                            
?8002   Abs PIAS                                             
 8004   Abs PIASB                                            
 FC05   Abs POWDWN                                           
^FD1F   Abs PRINT                                            
 FD48   Abs PUN11                                            
^FD5A   Abs PUN22                                            
^FD5C   Abs PUN23                                            
 FD7C   Abs PUN32                                            
^FD3D   Abs PUNCH                                            
^FD97   Abs PUNT2                                            
?FE00   Abs ROMEND                                           
 FDA5   Abs SAV                                              
 FD13   Abs SFE                                              


Crasm 1.8:                           MIKBUG                  page  9

^0008   Abs SP                                               
^0042   Abs STACK                                            
 FCD0   Abs START                                            
^000E   Abs TEMP                                             
^000F   Abs TW                                               
^000C   Abs XHI                                              
^000D   Abs XLOW                                             
^0012   Abs XTEMP                                            
























































